<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.org.spark.dao.NhtInfoMapper">
  <resultMap id="BaseResultMap" type="cn.org.spark.model.NhtInfo">
    <constructor>
      <arg column="ip" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="ipLong" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="nhtScore" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="updateTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="memo" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ip, ipLong, nhtScore, updateTime, createTime, memo, id
  </sql>
  <select id="selectByExample" parameterType="cn.org.spark.model.NhtInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nhtInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.org.spark.model.NhtInfoExample">
    delete from nhtInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.org.spark.model.NhtInfo">
    insert into nhtInfo (ip, ipLong, nhtScore, 
      updateTime, createTime, memo, 
      id)
    values (#{ip,jdbcType=VARCHAR}, #{iplong,jdbcType=BIGINT}, #{nhtscore,jdbcType=INTEGER}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{createtime,jdbcType=TIMESTAMP}, #{memo,jdbcType=VARCHAR}, 
      #{id,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.org.spark.model.NhtInfo">
    insert into nhtInfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ip != null">
        ip,
      </if>
      <if test="iplong != null">
        ipLong,
      </if>
      <if test="nhtscore != null">
        nhtScore,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="id != null">
        id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="iplong != null">
        #{iplong,jdbcType=BIGINT},
      </if>
      <if test="nhtscore != null">
        #{nhtscore,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.org.spark.model.NhtInfoExample" resultType="java.lang.Long">
    select count(*) from nhtInfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nhtInfo
    <set>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.iplong != null">
        ipLong = #{record.iplong,jdbcType=BIGINT},
      </if>
      <if test="record.nhtscore != null">
        nhtScore = #{record.nhtscore,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nhtInfo
    set ip = #{record.ip,jdbcType=VARCHAR},
      ipLong = #{record.iplong,jdbcType=BIGINT},
      nhtScore = #{record.nhtscore,jdbcType=INTEGER},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      memo = #{record.memo,jdbcType=VARCHAR},
      id = #{record.id,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

</mapper>